@using CustomIdentity.ViewModels;
@model LoginVM
@{
    ViewData["Title"] = "Login";
}

<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-5 card p-3">
        <h1 class="text-center text-info">Login</h1>
        <form asp-action="Login" asp-controller="Account" method="post" asp-route-returnurl="@ViewData["ReturnUrl"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-2 form-check">
                <label class="form-check-label">
                    <input asp-for="RememberMe" class="form-check-input" /> @Html.DisplayNameFor(a=>a.RememberMe)
                </label>
            </div>

            <div class="row d-flex align-items-center justify-content-center">
                <input type="submit" value="Login" class="btn btn-primary btn-lg mt-3" style="width:80%" />
                <a asp-action="Register" class="text-decoration-none float-start mt-3" asp-route-returnurl="@ViewData["ReturnUrl"]">Don't have account?</a>
            </div>

        </form>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}